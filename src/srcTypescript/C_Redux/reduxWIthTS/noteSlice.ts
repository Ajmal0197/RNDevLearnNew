// Import necessary functions and types from '@reduxjs/toolkit' and your custom 'store' file
import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState } from './store';

// Define an interface for the structure of a Note
// Explanation:
// - The 'Note' interface represents the structure of a note, with 'title' and 'desc' properties.
export interface Note {
  title: string;
  desc: string;
}

// Initialize the initial state as an empty array of Notes
const initialState: Array<Note> = [];
// or const initialState: Note[] = [];

// Create a Redux toolkit slice for managing the 'notes' state
export const notesSlice = createSlice({
  name: 'notes', // Name of the slice
  initialState, // Initial state
  reducers: {
    // Define a reducer function to add a new note to the state
    // Explanation:
    // - The 'addNote' reducer adds a new note to the state by pushing it into the 'state' array.
    addNote(state, action: PayloadAction<Note>) {
      state.push(action.payload);
    },
  },
});

// Export the actions created by the slice
export const { addNote } = notesSlice.actions;

// Selector function to retrieve the 'notes' state from the root state
export const noteSelector = (state: RootState) => state.notesSlice;

// Export the reducer function generated by the slice
export default notesSlice.reducer;
